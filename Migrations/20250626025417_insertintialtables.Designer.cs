// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using practice_0502025.Application;

#nullable disable

namespace practice_0502025.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250626025417_insertintialtables")]
    partial class insertintialtables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("practice_0502025.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Apparel"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Home Goods"
                        });
                });

            modelBuilder.Entity("practice_0502025.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderDate = new DateTime(2025, 6, 15, 10, 30, 0, 0, DateTimeKind.Utc),
                            TotalAmount = 1260.00m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            OrderDate = new DateTime(2025, 6, 16, 14, 0, 0, 0, DateTimeKind.Utc),
                            TotalAmount = 53.00m
                        });
                });

            modelBuilder.Entity("practice_0502025.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 101,
                            Quantity = 1,
                            UnitPrice = 1200.00m
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            ProductId = 102,
                            Quantity = 2,
                            UnitPrice = 25.00m
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            ProductId = 106,
                            Quantity = 2,
                            UnitPrice = 20.00m
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 2,
                            ProductId = 105,
                            Quantity = 1,
                            UnitPrice = 12.50m
                        });
                });

            modelBuilder.Entity("practice_0502025.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            CategoryId = 1,
                            Name = "Laptop Pro X",
                            Price = 1200.00m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 102,
                            CategoryId = 1,
                            Name = "Wireless Mouse",
                            Price = 25.00m,
                            Stock = 200
                        },
                        new
                        {
                            Id = 103,
                            CategoryId = 1,
                            Name = "Mechanical Keyboard",
                            Price = 80.00m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 104,
                            CategoryId = 2,
                            Name = "The Hitchhiker's Guide to the Galaxy",
                            Price = 15.99m,
                            Stock = 75
                        },
                        new
                        {
                            Id = 105,
                            CategoryId = 2,
                            Name = "1984 by George Orwell",
                            Price = 12.50m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 106,
                            CategoryId = 3,
                            Name = "Men's T-Shirt",
                            Price = 20.00m,
                            Stock = 150
                        });
                });

            modelBuilder.Entity("practice_0502025.Entities.OrderItem", b =>
                {
                    b.HasOne("practice_0502025.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("practice_0502025.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("practice_0502025.Entities.Product", b =>
                {
                    b.HasOne("practice_0502025.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("practice_0502025.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("practice_0502025.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
